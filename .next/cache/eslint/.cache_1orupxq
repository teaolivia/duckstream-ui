[{"/home/theayusuf/projects/duckstream-ui/src/app/layout.tsx":"1","/home/theayusuf/projects/duckstream-ui/src/app/page.tsx":"2","/home/theayusuf/projects/duckstream-ui/src/app/data/data.ts":"3","/home/theayusuf/projects/duckstream-ui/src/app/filterable-content/FilterableContent.tsx":"4","/home/theayusuf/projects/duckstream-ui/src/app/search-box/SearchBox.tsx":"5","/home/theayusuf/projects/duckstream-ui/src/app/video-overview/VideoOverview.tsx":"6","/home/theayusuf/projects/duckstream-ui/src/app/video-titles-list/VideoTitlesList.tsx":"7"},{"size":445,"mtime":1689462991157,"results":"8","hashOfConfig":"9"},{"size":6363,"mtime":1689462668367,"results":"10","hashOfConfig":"9"},{"size":1974,"mtime":1689460051189,"results":"11","hashOfConfig":"9"},{"size":989,"mtime":1689462475798,"results":"12","hashOfConfig":"9"},{"size":493,"mtime":1689461143334,"results":"13","hashOfConfig":"9"},{"size":1226,"mtime":1689462429219,"results":"14","hashOfConfig":"9"},{"size":1017,"mtime":1689462526842,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"wi7czo",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/theayusuf/projects/duckstream-ui/src/app/layout.tsx",[],[],"/home/theayusuf/projects/duckstream-ui/src/app/page.tsx",[],[],"/home/theayusuf/projects/duckstream-ui/src/app/data/data.ts",[],[],"/home/theayusuf/projects/duckstream-ui/src/app/filterable-content/FilterableContent.tsx",[],[],"/home/theayusuf/projects/duckstream-ui/src/app/search-box/SearchBox.tsx",[],[],"/home/theayusuf/projects/duckstream-ui/src/app/video-overview/VideoOverview.tsx",["38","39"],[],"import React from 'react';\n\n\ninterface VideoOverviewProps {\n    titleText: string;\n    thumbnailSrc: string;\n}\n\n// TODO: When hover over thumbnail, view text that tell the user to click if they want to play the video.\n// When clicked, it will redirect to the video interactive player.\nfunction VideoOverviewThumbnail({src}: {src: string}): JSX.Element {\n    return (\n        <div className='poster' style={{ position: 'relative', width: '100%', marginRight: '14px', boxSizing: 'content-box' }}>\n            <img src={src}/>\n        </div>\n    );\n}\n\nfunction VideoOverviewTitle({text}: {text: string} ): JSX.Element {\n    return (\n        <div className='video-overview-title' style={{ padding: '20px' }}>\n            {text}\n        </div>\n    );\n}\n\nexport function VideoOverview({ titleText, thumbnailSrc }: VideoOverviewProps): JSX.Element {\n    return (\n        <div className='video-overview' style={{ justifyContent: 'center',\n            alignContent: 'center',\n            flexWrap: 'wrap',\n            textAlign: 'center',\n            position: 'relative',\n            width: '100%'}}>\n            <VideoOverviewThumbnail src={thumbnailSrc} />\n            <VideoOverviewTitle text={titleText} />\n        </div>\n    );\n}","/home/theayusuf/projects/duckstream-ui/src/app/video-titles-list/VideoTitlesList.tsx",[],[],{"ruleId":"40","severity":1,"message":"41","line":14,"column":13,"nodeType":"42","endLine":14,"endColumn":29},{"ruleId":"43","severity":1,"message":"44","line":14,"column":13,"nodeType":"42","endLine":14,"endColumn":29},"@next/next/no-img-element","Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images."]